Polinomio& Polinomio::operator-(Polinomio& PolObj)
{
	int grad;
	Polinomio& ResPol=PolObj;//Polinomio P(1,new Rac[2]);
	if(grado==PolObj.grado){//cout<<"AQUI"<<endl;
      Polinomio ResP1(grado,new Rac[grado+1]);
      ResPol=ResP1;
      for(int i=0;i<grado+1;i++){
        (ResPol.A+i)->n=(A+i)->n;
        (ResPol.A+i)->d=(A+i)->d;
      }
      for(int i=0;i<grado+1;i++){
			*(ResPol.A+i)=*(A+i)-*(PolObj.A+i);//cout<<"AQUI: "<<*(A+i)<<" - "<<*(PolObj.A+i)<<endl;
	  }
	}else{
	  grad=maximo(grado,PolObj.grado);
	  Polinomio ResP(grad,new Rac[grad+1]);
	  ResPol=ResP;
	  if(grado==grad){/*si el obj implicito es el de mayor grado*/
		for(int i=0;i<grado+1;i++){
			(ResPol.A+i)->n=(A+i)->n;
			(ResPol.A+i)->d=(A+i)->d;
		}
	  }else{/*si el segundo operando es el de mayor grado*/
		for(int i=0;i<PolObj.grado+1;i++){
			(ResPol.A+i)->n=(-1)*((PolObj.A+i)->n);
			(ResPol.A+i)->d=(PolObj.A+i)->d;
		}
      }
	  if(grado==grad){/*si el objeto implicito es el polinomio de mayor grado*/
		for(int i=PolObj.grado;i>=0;i--){
			*(ResPol.A+ResPol.grado-(PolObj.grado-i))=*(ResPol.A+ResPol.grado-(PolObj.grado-i))-*(PolObj.A+i);
		}
	  }else{/*si el segundo operando es el de mayor grado*/
		for(int i=grado;i>=0;i--){
			*(ResPol.A+ResPol.grado-(grado-i))=*(ResPol.A+ResPol.grado-(grado-i))+*(A+i);
		}
	  }
    }
	return ResPol;
}
